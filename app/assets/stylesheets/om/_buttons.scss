@import 'responsive';

$btn: #aaa !default;
$btn-primary: #3079ED !default;
$btn-success: #238625 !default;

@mixin btn($base-color, $text: false) {
  // @include button($color);

  $grayscale: false;
  @if $base-color == grayscale($base-color) {
    $grayscale: true;
  }

  $border: adjust-color($base-color, $saturation: 9%, $lightness: -14%);
  $inset-shadow: adjust-color($base-color, $saturation: -8%, $lightness: 15%);
  $stop-gradient: adjust-color($base-color, $saturation: 9%, $lightness: -11%);
  $text-shadow: adjust-color($base-color, $saturation: 15%, $lightness: -18%);

  @if $text == false {
    @if lightness($base-color) > 70% {
      $text: hsl(0, 0, 20%);
    } @else {
      $text: hsl(0, 0, 100%);
    }
  }

  @if lightness($text) < 70% {
    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);
  }

  color: $text;
  border: 1px solid $border;
  text-shadow: 0 1px 0 $text-shadow;
  @include border-radius(3px);
  @include box-shadow(inset 0 1px 0 0 $inset-shadow);
  @include linear-gradient($base-color, $stop-gradient);

  &:hover:not(:disabled) {
    $base-color-hover: adjust-color($base-color, $saturation: -4%, $lightness: -5%);
    $inset-shadow-hover: adjust-color($base-color, $saturation: -7%, $lightness: 5%);
    $stop-gradient-hover: adjust-color($base-color, $saturation: 8%, $lightness: -14%);

    color: $text;
    cursor: pointer;
    @include box-shadow(inset 0 1px 0 0 $inset-shadow-hover);
    @include linear-gradient($base-color-hover, $stop-gradient-hover);
  }

  &:focus:not(:disabled), &.focus {
    @include box-shadow(0 0 0 1px rgba(255, 255, 255, 0.8) inset);
  }

  &:active:not(:disabled) {
    $border-active: adjust-color($base-color, $saturation: 9%, $lightness: -14%);
    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);

    @if $grayscale == true {
      $border-active: grayscale($border-active);
      $inset-shadow-active: grayscale($inset-shadow-active);
    }

    border: 1px solid $border-active;
    @include box-shadow(inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active, 0 1px 1px 0 #eee);
  }
}


.btn {
  @include btn($btn, #fff);
  font-size: 1em;
  font-weight: bold;
  padding: 5px 10px;
  display: inline-block;
  text-decoration: none;

  // font: -webkit-small-control;
  // -webkit-appearance: none;
  // -webkit-box-align: center;
  // -webkit-rtl-ordering: logical;
  // -webkit-user-select: text;
  -webkit-background-clip: padding-box;

  &:hover {
    text-decoration: none;
  }

  &.btn-small {
    font-size: 12px;
    font-size: 1.2rem;
    font-weight: normal;
    padding: 2px 4px !important;
  }

  &.btn-large {
    font-size: 18px;
    font-size: 1.8rem;
  }

  > .icon-large:before {
    font-size: 20px;
    padding-right: 4px;
    margin-top: .2em;
    line-height: .5em;
    vertical-align: middle;
  }

  // @include media(mobile) {
  //   padding: 3px 5px;
  // }

  &:focus, &.focus {
    outline: none;
  }
}

.btn-group {
  a {
    @extend .button;
    @include border-radius(0);
    border-right-width: 0;
    margin: 0;

    display: block;
    float: left;

    &:hover, &:active, &.active, &.current, &:focus, &.focus  {
      border-right-width: 1px;
      + a { border-left-width: 0; }
    }

    &:first-child {
      @include border-left-radius(2px);
    }
    &:last-child  {
      @include border-right-radius(2px);
      border-right-width: 1px;
    }
  }

  &.btn-small a { @extend .btn-small }
}

.btn-primary {
  @extend .btn;
  @include btn($btn-primary, #fff);
}

.btn-success {
  @extend .btn;
  @include btn($btn-success, #fff);
}
