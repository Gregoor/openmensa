#
#= require jquery
#= require jquery_ujs
#= require leaflet
#= require leaflet.markercluster
#

class Map
  constructor: (id, options) ->
    @map = L.map(id, scrollWheelZoom: false).setView [51.505, -0.09], 13
    @map.addLayer L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
        maxZoom: 18)


    @cluster = new L.MarkerClusterGroup showCoverageOnHover: false

    @markers = []
    # L.Icon.Default.extend({options: {iconUrl: '<%= image_path "marker-dark.png" %>'}});

    if options.markers?
      @addMarker m for m in options.markers

    @map.addLayer(@cluster);

  addMarker: (options) =>
    marker = L.marker([options.lat, options.lng], { title: options.title })
    marker.bindPopup "<a class=\"popup-link\" href=\"#{options.url}\">#{options.title}</a><br />"

    @cluster.addLayer marker
    @markers.push marker

  adjustToMarkers: ->
    bounds = new L.LatLngBounds(marker.getLatLng() for marker in @markers)

    @map.fitBounds bounds
    if @map.getZoom() > 12
      @map.setZoom 12

$ ->
  $(".map").each ->
    map = new Map $(@).data("map"), markers: $(@).data("markers")
    map.adjustToMarkers()
